name: nolleogasil backend 배포 자동화

on:
  push:
    branches: [main]  # main 브랜치에 푸시되면 실행

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Make application.yml  # application.yml 파일 생성
        run: |
          mkdir -p src/main/resources  # ✅ 디렉토리 먼저 생성
          echo "${{ secrets.APPLICATION_YML }}" > src/main/resources/application.yml
        shell: bash

      - name: Grant execute permission for gradlew  # gradlew 실행 권한 부여
        run: chmod +x gradlew

      - name: Build with Gradle
        run: |
          chmod +x gradlew
          ./gradlew clean build -x test

      - name: Set Environment Variables
        run: |
          echo "DOCKER_IMAGE=${{ secrets.DOCKERHUB_USERNAME }}/nolleogasil-backend:latest" >> $GITHUB_ENV

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Build and Push Docker Image
        run: |
          docker build -t ${{ env.DOCKER_IMAGE }} .
          docker push ${{ env.DOCKER_IMAGE }}

  deploy:
    runs-on: ubuntu-latest
    needs: build  # build가 완료된 후에 실행됨

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Set Environment Variables
        run: |
          echo "DOCKER_IMAGE=${{ secrets.DOCKERHUB_USERNAME }}/nolleogasil-backend:latest" >> $GITHUB_ENV

      - name: Set up SSH Key and Connect to EC2
        run: |
          echo "${{ secrets.EC2_SSH_KEY }}" > private_key.pem
          chmod 600 private_key.pem

      - name: Deploy to Server
        run: |
          ssh -i private_key.pem -o StrictHostKeyChecking=no ${{ secrets.EC2_USERNAME }}@${{ secrets.EC2_HOST }} << 'EOF'
            cd /home/ubuntu/app
            
          
            # 최신 Docker 이미지 Pull
            docker pull ${{ env.DOCKER_IMAGE }} 
          
            echo "DOCKERHUB_USERNAME=${{ secrets.DOCKERHUB_USERNAME }}" > .env
            echo "DOCKER_IMAGE=${{ secrets.DOCKERHUB_USERNAME }}/nolleogasil-backend:latest" >> .env
            echo "ALB_LISTENER_ARN=${{ secrets.ALB_LISTENER_ARN }}" >> .env
            echo "BLUE_TARGET_GROUP_ARN=${{ secrets.BLUE_TARGET_GROUP_ARN }}" >> .env
            echo "GREEN_TARGET_GROUP_ARN=${{ secrets.GREEN_TARGET_GROUP_ARN }}" >> .env

            # Blue/Green 배포 스크립트 실행
            sudo chmod u+x ./deploy.sh
            ./deploy.sh
          EOF
